{"version":3,"sources":["uni-app:///main.js","webpack:////Users/yangqinglong/Documents/zz/camera_app_wechat_h5/cognitiveTasksPage/DigitalMemoryTest.vue?156b","webpack:////Users/yangqinglong/Documents/zz/camera_app_wechat_h5/cognitiveTasksPage/DigitalMemoryTest.vue?faaf","webpack:////Users/yangqinglong/Documents/zz/camera_app_wechat_h5/cognitiveTasksPage/DigitalMemoryTest.vue?00bd","webpack:////Users/yangqinglong/Documents/zz/camera_app_wechat_h5/cognitiveTasksPage/DigitalMemoryTest.vue?909b","uni-app:///cognitiveTasksPage/DigitalMemoryTest.vue","webpack:////Users/yangqinglong/Documents/zz/camera_app_wechat_h5/cognitiveTasksPage/DigitalMemoryTest.vue?c741"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","renderjs","component","options","__file","components","uButton","e","message","indexOf","console","error","render","_vm","this","_h","$createElement","_self","_c","recyclableRender","staticRenderFns","_withStripped"],"mappings":"kJAAA,KAGA,YACA,Y,mDAFAA,GAAGC,kCAAoCC,EAGvCC,EAAWC,a,gECLX,yHACIC,EADJ,QASIC,EAAY,qBACd,aACA,YACA,sBACA,EACA,KACA,WACA,MACA,EACA,gBACAD,GAGFC,EAAUC,QAAQC,OAAS,2CACZ,aAAAF,E,0CCvBf,uQ,iCCAA,IAAIG,EAAJ,0LACA,IACEA,EAAa,CACXC,QAAS,WACP,OAAO,uHAKX,MAAOC,GACP,IAC+C,IAA7CA,EAAEC,QAAQC,QAAQ,wBACa,IAA/BF,EAAEC,QAAQC,QAAQ,QAWlB,MAAMF,EATNG,QAAQC,MAAMJ,EAAEC,SAChBE,QAAQC,MAAM,mBACdD,QAAQC,MACN,uFAEFD,QAAQC,MACN,mDAMN,IAAIC,EAAS,WACX,IAAIC,EAAMC,KACNC,EAAKF,EAAIG,eACJH,EAAII,MAAMC,IAEjBC,GAAmB,EACnBC,EAAkB,GACtBR,EAAOS,eAAgB,G,iCCjCvB,8GAAg1B,eAAG,G,8HC0Fn1B,QAOA,GAHA,MAGA,Q,qXAGA,CACA,yBACA,KAFA,WAGA,OACA,aACA,iBAIA,cACA,eACA,aACA,cACA,aACA,iBACA,aACA,aACA,cACA,aACA,WACA,4BACA,8BACA,QACA,YACA,YACA,MAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,QACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,QACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,QACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,QACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,QACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,QACA,YACA,mBACA,wBACA,gBACA,kBAGA,MAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,QACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,OACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,QACA,YACA,mBACA,wBACA,gBACA,iBAEA,CACA,SACA,QACA,YACA,mBACA,wBACA,gBACA,mBAIA,cACA,gBACA,2BACA,uBA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","file":"cognitiveTasksPage/DigitalMemoryTest.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './cognitiveTasksPage/DigitalMemoryTest.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./DigitalMemoryTest.vue?vue&type=template&id=7d3d364d&scoped=true&\"\nvar renderjs\nimport script from \"./DigitalMemoryTest.vue?vue&type=script&lang=js&\"\nexport * from \"./DigitalMemoryTest.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DigitalMemoryTest.vue?vue&type=style&index=0&id=7d3d364d&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7d3d364d\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"cognitiveTasksPage/DigitalMemoryTest.vue\"\nexport default component.exports","export * from \"-!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./DigitalMemoryTest.vue?vue&type=template&id=7d3d364d&scoped=true&\"","var components\ntry {\n  components = {\n    uButton: function() {\n      return import(\n        /* webpackChunkName: \"node-modules/uview-ui/components/u-button/u-button\" */ \"uview-ui/components/u-button/u-button.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./DigitalMemoryTest.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./DigitalMemoryTest.vue?vue&type=script&lang=js&\"","<template>\r\n\t<div>\r\n\r\n\t\t<div class=\"memory-warp\"\r\n\t\t\t:style=\"'background-image: url(' + add_bg_memory_warp + ');background-size: cover;background-repeat: no-repeat;'\">\r\n\r\n\t<!-- \t\t<div class=\"modelName\">\r\n\t\t\t\t{{ showCover ? \"观看模式\" : \"控制模式\" }}\r\n\t\t\t</div> -->\r\n\r\n\t\t\t<div class=\"tip-title\">\r\n\t\t\t\t<p>{{ desFlag ? \"正序测试\" : \"倒序测试\" }}</p>\r\n\t\t\t</div>\r\n\t\t\t<!-- 倒计时 -->\r\n\t\t\t<div v-if=\"timingShow\" class=\"timing-content\">\r\n\t\t\t\t<p class=\"timing-num\">{{ countDownStr }}</p>\r\n\t\t\t</div>\r\n\t\t\t<!-- 数字显示 -->\r\n\t\t\t<div v-if=\"digitalShow && !timingShow\" class=\"digital-content\">\r\n\t\t\t\t<p>\r\n\r\n\t\t\t\t\t<button class=\"startTest bg phcolor\" v-if=\"digitalShow && !timingShow && buttonShow\"\r\n\t\t\t\t\t\t@click=\"begin()\">开始测试\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{{ randomNum }}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<!-- 键盘显示 -->\n\t\t\t<view class=\"\" style=\"display: flex;flex-direction: column;\">\n\t\t\t \r\n\t\t\t<div v-if=\"!digitalShow && !timingShow\" class=\"digital-input-content\">\r\n\t\t\t\t<div class=\"add-mid\"\r\n\t\t\t\t\t:style=\"'background-image: url(' + add_add_mid + ');background-repeat: no-repeat;'\">\r\n\t\t\t\t\t<p class=\"digital-show\">\r\n\t\t\t\t\t\t<span class=\"bn-in\"> {{ numberShow }}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div class=\"num-btn\">\r\n\t\t\t\t\t\t<u-button class='custom-style'  shape=\"circle\"  type=\"success\" @click=\"userClick('1')\">1</u-button>\r\n\t\t\t\t\t\t<view class=\"w_60\"></view>\n\t\t\t\t\t\t<u-button class='custom-style'  shape=\"circle\"  type=\"success\" @click=\"userClick('2')\">2</u-button>\r\n\t\t\t\t\t\t<view class=\"w_60\"></view>\n\t\t\t\t\t\t<u-button class='custom-style'  shape=\"circle\"  type=\"success\" @click=\"userClick('3')\">3</u-button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"num-btn\">\r\n\t\t\t\t\t\t<u-button class='custom-style'  shape=\"circle\"  type=\"success\" @click=\"userClick('4')\">4</u-button>\r\n\t\t\t\t\t\t<view class=\"w_60\"></view>\n\t\t\t\t\t\t<u-button class='custom-style'  shape=\"circle\"  type=\"success\" @click=\"userClick('5')\">5</u-button>\r\n\t\t\t\t\t\t<view class=\"w_60\"></view>\n\t\t\t\t\t\t<u-button class='custom-style'  shape=\"circle\"  type=\"success\" @click=\"userClick('6')\">6</u-button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"num-btn\">\r\n\t\t\t\t\t\t<u-button class='custom-style'  shape=\"circle\"   type=\"success\" @click=\"userClick('7')\">7</u-button>\r\n\t\t\t\t\t\t<view class=\"w_60\"></view>\n\t\t\t\t\t\t<u-button class='custom-style'   shape=\"circle\"  type=\"success\" @click=\"userClick('8')\">8</u-button>\r\n\t\t\t\t\t\t<view class=\"w_60\"></view>\n\t\t\t\t\t\t<u-button class='custom-style' shape=\"circle\"   type=\"success\" @click=\"userClick('9')\">9</u-button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"num-btn\">\r\n\t\t\t\t\t\t<u-button class='custom-style' shape=\"circle\"   type=\"success\" @click=\"userDel()\">删除</u-button>\r\n\t\t\t\t\t\t<view class=\"w_60\"></view>\n\t\t\t\t\t\t<u-button class='custom-style' shape=\"circle\"  type=\"success\" @click=\"userClick('0')\">0</u-button>\r\n\t\t\t\t\t\t<view class=\"w_60\"></view>\n\t\t\t\t\t\t<u-button class='custom-style'  shape=\"circle\"  type=\"success\" @click=\"userSubmit()\">提交</u-button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\n\t\t\t<view   v-if=\"\n\t\t\t                    role == 'doc' &&\n\t\t\t                    radio1 == 'doc' &&\n\t\t\t                    !timingShow &&\n\t\t\t                    !(digitalShow && !timingShow)\n\t\t\t                  \" class=\"custom-style circleLi\" @click=\"endTest\">{{forceEndButtonName}}</view>\r\n\r\n\t\n\t\t\t</view>\r\n\t\t<!-- \t<u-radio-group direction=\"horizontal\" @change=\"changeMaster\" v-if=\"role == 'doc'\" class=\"contral_group\"\r\n\t\t\t\tv-model=\"radio1\">\r\n\t\t\t\t<u-radio name=\"patient\" shape=\"square\">用户控制</u-radio>\r\n\t\t\t\t<u-radio name=\"doc\" shape=\"square\">医生控制</u-radio>\r\n\t\t\t</u-radio-group> -->\r\n\r\n\t\t\t<div class=\"cover\" v-show=\"showCover\" @click=\"disableHandle\"></div>\r\n\t\t\t \r\n\t\t</div>\r\n\r\n\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tscoketUrl\r\n\t} from \"../common/config.js\";\r\n\r\n\timport {\r\n\t\tcognizeDST\r\n\t} from '@/api/index.js'\r\n\timport {\r\n\t\ttaskImgs\r\n\t} from \"./data/DigitalMemoryTest.js\";\r\n\texport default {\r\n\t\tname: \"digitalMemoryTest\",\r\n\t\tdata() {\r\n\t\t\treturn {\n\t\t\t\tcustomStyle: {\n\t\t\t\t\t\tmargin:\"0 10px\"\t\t \n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\r\n\t\t\t\t// showCover:true,\r\n\t\t\t\tbuttonShow: true,\r\n\t\t\t\tdigitalShow: true, //显示数字与输入数字切换\r\n\t\t\t\tnumberArr: [], //数字输入数组\r\n\t\t\t\tnumberShow: \"\", //数字输入器显示数字\r\n\t\t\t\trandomArr: [], //随机数字产生数组\r\n\t\t\t\trandomDigital: \"\", //随机数列\r\n\t\t\t\trandomNum: \"\", //随机数显示\r\n\t\t\t\tcumulation: 0, //累加器\r\n\t\t\t\ttimeFlag: null, //计时器名字\r\n\t\t\t\tcommonTime: 0, //累加计时\r\n\t\t\t\tdesFlag: true, //true为正序，false为倒序\r\n\t\t\t\tforceEndButtonName: \"结束正序测试\",\r\n\t\t\t\tarrList: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], //取样数组\r\n\t\t\t\tresult: {\r\n\t\t\t\t\tAESCScore: 0, //顺序成绩\r\n\t\t\t\t\tDESCScore: 0, //倒序成绩\r\n\t\t\t\t\tAESC: [\r\n\t\t\t\t\t\t//正序数组\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 0, //序号\r\n\t\t\t\t\t\t\tdiff: 3, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 1, //序号\r\n\t\t\t\t\t\t\tdiff: 3, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 2, //序号\r\n\t\t\t\t\t\t\tdiff: 4, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 3, //序号\r\n\t\t\t\t\t\t\tdiff: 4, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 4, //序号\r\n\t\t\t\t\t\t\tdiff: 5, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 5, //序号\r\n\t\t\t\t\t\t\tdiff: 5, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 6, //序号\r\n\t\t\t\t\t\t\tdiff: 6, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 7, //序号\r\n\t\t\t\t\t\t\tdiff: 6, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 8, //序号\r\n\t\t\t\t\t\t\tdiff: 7, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 9, //序号\r\n\t\t\t\t\t\t\tdiff: 7, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 10, //序号\r\n\t\t\t\t\t\t\tdiff: 8, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 11, //序号\r\n\t\t\t\t\t\t\tdiff: 8, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 12, //序号\r\n\t\t\t\t\t\t\tdiff: 9, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 13, //序号\r\n\t\t\t\t\t\t\tdiff: 9, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 14, //序号\r\n\t\t\t\t\t\t\tdiff: 10, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 15, //序号\r\n\t\t\t\t\t\t\tdiff: 10, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 16, //序号\r\n\t\t\t\t\t\t\tdiff: 11, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 17, //序号\r\n\t\t\t\t\t\t\tdiff: 11, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 18, //序号\r\n\t\t\t\t\t\t\tdiff: 12, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 19, //序号\r\n\t\t\t\t\t\t\tdiff: 12, //难度等级\r\n\t\t\t\t\t\t\ttype: \"AESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性    --可以不加\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\tDESC: [\r\n\t\t\t\t\t\t//倒序\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 0, //序号\r\n\t\t\t\t\t\t\tdiff: 2, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 1, //序号\r\n\t\t\t\t\t\t\tdiff: 2, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 2, //序号\r\n\t\t\t\t\t\t\tdiff: 3, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 3, //序号\r\n\t\t\t\t\t\t\tdiff: 3, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 4, //序号\r\n\t\t\t\t\t\t\tdiff: 4, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 5, //序号\r\n\t\t\t\t\t\t\tdiff: 4, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 6, //序号\r\n\t\t\t\t\t\t\tdiff: 5, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 7, //序号\r\n\t\t\t\t\t\t\tdiff: 5, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 8, //序号\r\n\t\t\t\t\t\t\tdiff: 6, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 9, //序号\r\n\t\t\t\t\t\t\tdiff: 6, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 10, //序号\r\n\t\t\t\t\t\t\tdiff: 7, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 11, //序号\r\n\t\t\t\t\t\t\tdiff: 7, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 12, //序号\r\n\t\t\t\t\t\t\tdiff: 8, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 13, //序号\r\n\t\t\t\t\t\t\tdiff: 8, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 14, //序号\r\n\t\t\t\t\t\t\tdiff: 9, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 15, //序号\r\n\t\t\t\t\t\t\tdiff: 9, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 16, //序号\r\n\t\t\t\t\t\t\tdiff: 10, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex: 17, //序号\r\n\t\t\t\t\t\t\tdiff: 10, //难度等级\r\n\t\t\t\t\t\t\ttype: \"DESC\",\r\n\t\t\t\t\t\t\tqNumberSequence: \"\", //呈现字母序列\r\n\t\t\t\t\t\t\tuserResponseSequence: \"\", //用户反应字母序列\r\n\t\t\t\t\t\t\trightOrWrong: \"\", //反应正确性\r\n\t\t\t\t\t\t\tresponseTime: \"\", //反应时\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\ttimingShow: true, //显示倒计时\r\n\t\t\t\ttimingFlag: null, //倒计时名称\r\n\t\t\t\ttimingDes: \"测试于5秒后开始，请做好准备\", //倒计时提示语\r\n\t\t\t\tcountDownStr: \"测试马上开始！\",\r\n\t\t\t\ttimingNum: 5, //倒计时初始化时间\r\n\t\t\t\tsubjectInfo: \"\",\r\n\t\t\t\tuserId: \"\", //用户id\r\n\t\t\t\ttaskId: \"\",\r\n\t\t\t\trole: \"\",\r\n\t\t\t\ttoUserId: \"\",\r\n\t\t\t\tradio1: \"doc\",\r\n\t\t\t\twebSocket: \"\",\r\n\t\t\t\ttestPlanId: \"\",\r\n\t\t\t\tadd_bg_memory_warp: \"\",\r\n\t\t\t\tadd_add_mid: \"\",\r\n\t\t\t};\r\n\t\t},\r\n\t\tonShow() {\r\n\t\t\tthis.add_bg_memory_warp = taskImgs.add_bg_memory_warp;\r\n\t\t\tthis.add_add_mid = taskImgs.add_add_mid;\r\n\t\t\tthis.chooseRole();\r\n\t\t\t//绑定事件\r\n\t\t\t// #ifdef H5\r\n\t\t\twindow.addEventListener('beforeunload', e => this.closeWebsocket(e));\r\n\t\t\t// #endif\r\n\r\n\t\t},\r\n\r\n\t\tcomputed: {\r\n\t\t\tshowCover: function() {\r\n\t\t\t\treturn this.role == this.radio1 ? false : true;\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\r\n\t\t\tbegin() {\r\n\t\t\t\t// this.sendMsgHandle(3905, null);\r\n\t\t\t\tthis.buttonShow = false;\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t//关闭倒计时提示页面\r\n\r\n\t\t\t\t\t//测试开始\r\n\t\t\t\t\tif (this.desFlag) {\r\n\t\t\t\t\t\t//正序测试\r\n\t\t\t\t\t\tthis.generateRandom(this.result.AESC[this.cumulation].diff);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//倒叙测试\r\n\r\n\t\t\t\t\t\tthis.generateRandom(this.result.DESC[this.cumulation].diff);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1500);\r\n\t\t\t},\r\n\t\t\tinit() {\r\n\t\t\t\t// this.testPlanId = this.$route.query.testPlanId || '';\r\n\t\t\t\tthis.userId = this.$store.state.userInfo.user.id;\r\n\r\n\t\t\t\tthis.toUserId = this.role == \"doc\" ? `${this.userId}patient` : `${this.userId}doc`;\r\n\t\t\t\t// this.creatScoket();\r\n\t\t\t\tthis.startTiming();\r\n\t\t\t},\r\n\t\t\tchangeMaster() {\r\n\t\t\t\tlet msg = {\r\n\t\t\t\t\ttoUserId: this.toUserId,\r\n\t\t\t\t\tmessage: {\r\n\t\t\t\t\t\tmsg: \"角色切换\",\r\n\t\t\t\t\t\tmaster: this.radio1 == this.role,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tconsole.log(msg);\r\n\t\t\t\tthis.webSocket.send(JSON.stringify(msg));\r\n\t\t\t},\r\n\t\t\tdisableHandle() {\r\n\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ticon: \"none\",\r\n\t\t\t\t\ttitle: '您暂时不需要操作，请耐心等待！'\r\n\t\t\t\t})\r\n\r\n\t\t\t},\r\n\t\t\tchooseRole() {\r\n\t\t\t\tlet _this = this;\r\n\t\t\t\tuni.showModal({\r\n\t\t\t\t\ttitle: '提示',\r\n\t\t\t\t\tcontent: '请选择你的身份，医生还是普通用户？',\r\n\t\t\t\t\tconfirmText: \"医生\", //这块是确定按钮的文字\r\n\t\t\t\t\tcancelText: \"普通用户\", //这块是取消的文字\r\n\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\tif (res.confirm) {\r\n\t\t\t\t\t\t\t_this.role = \"doc\";\r\n\t\t\t\t\t\t\t_this.init();\r\n\t\t\t\t\t\t} else if (res.cancel) {\r\n\t\t\t\t\t\t\t_this.role = \"patient\";\r\n\t\t\t\t\t\t\t_this.init();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t})\r\n\r\n\r\n\t\t\t\t// this.$dialog.confirm({\r\n\t\t\t\t// \t\ttitle: '提示',\r\n\t\t\t\t// \t\tmessage: '请选择你的身份，医生还是普通用户',\r\n\t\t\t\t// \t\tconfirmButtonText: '医生',\r\n\t\t\t\t// \t\tcancelButtonText: '普通用户',\r\n\t\t\t\t// \t})\r\n\t\t\t\t// \t.then(() => {\r\n\t\t\t\t// \t\tthis.role = \"doc\";\r\n\t\t\t\t// \t\tthis.init();\r\n\t\t\t\t// \t})\r\n\t\t\t\t// \t.catch(() => {\r\n\t\t\t\t// \t\tthis.role = \"patient\";\r\n\t\t\t\t// \t\tthis.init();\r\n\t\t\t\t// \t});\r\n\r\n\r\n\t\t\t},\r\n\t\t\tcreatScoket() {\r\n\t\t\t\tconsole.log(\"判断----》\", `${scoketUrl}${this.userId}/${this.role}`)\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tuni.connectSocket({\r\n\t\t\t\t\turl: `${scoketUrl}${this.userId}/${this.role}`,\r\n\t\t\t\t\tsuccess(res) {\r\n\t\t\t\t\t\tconsole.log(\"判断是否已连接----》\", res)\r\n\t\t\t\t\t\tthat.open(); //1、判断是否打开连接\r\n\t\t\t\t\t\tthat.scoketMessage(); //2、判断websocket服务器是否返回信息\r\n\t\t\t\t\t\t// that.TimeOut(); //3、websocket超时操作\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfail(err) {\r\n\t\t\t\t\t\tconsole.log(\"WebSocket连接失败 connectSocket=\", err);\r\n\t\t\t\t\t\tthat.error();\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\t// console.log(\"scoketUrlscoketUrl======>\",scoketUrl)\r\n\t\t\t\t// this.webSocket = new WebSocket(`${scoketUrl}${this.userId}${this.role}`);\r\n\t\t\t\t// console.log(\"连接成功\");\r\n\t\t\t\t// this.webSocket.onerror = (event) => {\r\n\t\t\t\t// \talert(\"连接错误\");\r\n\t\t\t\t// };\r\n\r\n\t\t\t\t// this.webSocket.onopen = (event) => { \r\n\t\t\t\t// };\r\n\r\n\t\t\t\t// this.webSocket.onclose = (event) => {\r\n\t\t\t\t// \talert(\"服务不存在或者被关闭\");\r\n\t\t\t\t// };\r\n\r\n\t\t\t\t// this.webSocket.onmessage = (event) => {\r\n\t\t\t\t// \tlet data = JSON.parse(event.data);\r\n\t\t\t\t// \tif (!data.message) {\r\n\r\n\t\t\t\t// \t} else {\r\n\t\t\t\t// \t\tthis.receiveMsgHandle(data.message);\r\n\t\t\t\t// \t}\r\n\t\t\t\t// };\r\n\t\t\t},\r\n\t\t\t//连接成功\r\n\t\t\topen() {\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tuni.onSocketOpen(\r\n\t\t\t\t\t(res) => {\r\n\t\t\t\t\t\tconsole.log(\"WebSocket连接成功了-------->\");\r\n\t\t\t\t\t\t// that.reset();  //连接成功之后做两秒的一次连接(心跳机制)\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t//服务器返回信息\r\n\t\t\tscoketMessage() {\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tconsole.log(\"消息发送成功后服务端响应了\");\r\n\t\t\t\tuni.onSocketMessage((event) => {\r\n\t\t\t\t\tlet data = JSON.parse(event.data);\r\n\t\t\t\t\tconsole.log(\"消息发送成功后服务端响应了返回数据了\", data);\r\n\t\t\t\t\tif (!data.message) {\r\n\t\t\t\t\t\t// if (data.code == \"201\") {\r\n\t\t\t\t\t\t//   this.chooseRole();\r\n\t\t\t\t\t\t//   this.$message.error(data.msg);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.receiveMsgHandle(data.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(\"-服务器返回信息--99999》\", res);\r\n\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\treceiveMsgHandle(res) {\r\n\t\t\t\t// 切换控制权权\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tif (res.master == undefined) {\r\n\t\t\t\t\tif (res.eventNo == 3901) {\r\n\t\t\t\t\t\tthis.randomArr = res.data;\r\n\t\t\t\t\t\tthis.palynum();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.eventNo == 3902) {\r\n\t\t\t\t\t\tthis.userClick(res.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.eventNo == 3903) {\r\n\t\t\t\t\t\tthis.userDel();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.eventNo == 3904) {\r\n\t\t\t\t\t\tthis.userSubmit();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.eventNo == 3905) {\r\n\t\t\t\t\t\tthis.buttonShow = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.eventNo == 3906) {\r\n\t\t\t\t\t\tconsole.log(res.data)\r\n\t\t\t\t\t\tthis.endTest();\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (res.eventNo == 3907) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ticon: \"none\",\r\n\t\t\t\t\t\t\ttitle: '测试结束！'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t//跳转新测试结果页面\r\n\t\t\t\t\t\tthis.goTestResult(res.data);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.radio1 = res.master ? \"doc\" : \"patient\";\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 发送消息处理方法\r\n\t\t\tsendMsgHandle(No, data) {\r\n\t\t\t\tlet msg = {\r\n\t\t\t\t\ttoUserId: this.toUserId,\r\n\t\t\t\t\tmessage: {\r\n\t\t\t\t\t\tmsg: \"点击了一次\",\r\n\t\t\t\t\t\teventNo: No,\r\n\t\t\t\t\t\tdata: data,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t\tthis.webSocket.send(JSON.stringify(msg));\r\n\t\t\t},\r\n\t\t\tasync startTiming() {\r\n\t\t\t\tif (this.$store.state.userInfo.user.id == \"\") {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ticon: \"none\",\r\n\t\t\t\t\t\ttitle: '请先登录！'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tgetApp().jumpToTestRecordLogin()\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.timingFlag = setInterval(() => {\r\n\t\t\t\t\tif (this.timingNum == 0) {\r\n\t\t\t\t\t\tthis.timingShow = false;\r\n\r\n\t\t\t\t\t\tthis.timingFlag = clearInterval(this.timingFlag);\r\n\t\t\t\t\t\tif (!this.desFlag) {\r\n\t\t\t\t\t\t\tthis.generateRandom(this.result.DESC[this.cumulation].diff);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.countDownStr = this.timingNum;\r\n\t\t\t\t\t\tthis.timingNum--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1000);\r\n\t\t\t},\r\n\t\t\tstartTime() {\r\n\t\t\t\t//初始化设置计时器为0\r\n\t\t\t\tthis.commonTime = 0;\r\n\r\n\t\t\t\tthis.timeFlag = setInterval(() => {\r\n\t\t\t\t\tthis.commonTime++;\r\n\t\t\t\t}, 1000);\r\n\t\t\t},\r\n\t\t\tendTime() {\r\n\t\t\t\tthis.timeFlag = clearInterval(this.timeFlag);\r\n\t\t\t},\r\n\t\t\tasync sleep() {\r\n\t\t\t\treturn new Promise((resolve) => {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t}, 1000);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t// 产生随机数组\r\n\r\n\t\t\tgenerateArray(arrSize) {\r\n\t\t\t\tthis.randomArr = [];\r\n\t\t\t\t// 循环N次生成随机数 \r\n\r\n\t\t\t\tfor (let k = 0; k < arrSize; k++) {\r\n\t\t\t\t\tlet id = Math.floor(Math.random() * 10);\r\n\r\n\t\t\t\t\tif (k < 10) {\r\n\t\t\t\t\t\tif (this.randomArr.indexOf(this.arrList[id]) === -1) {\r\n\t\t\t\t\t\t\tthis.randomArr.push(this.arrList[id]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tk = k - 1;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.randomArr.push(this.arrList[id]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tgenerateRandom(arrSize) {\r\n\t\t\t\t// 产生随机数\r\n\t\t\t\tif (!this.showCover) {\r\n\t\t\t\t\tthis.generateArray(arrSize);\r\n\t\t\t\t\t// this.sendMsgHandle(3901, this.randomArr);\r\n\t\t\t\t\tthis.palynum();\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\tasync palynum() {\r\n\t\t\t\tthis.randomDigital = this.randomArr.join(\"\");\r\n\t\t\t\tfor (let i in this.randomArr) {\r\n\t\t\t\t\tthis.randomNum = this.randomArr[i];\r\n\t\t\t\t\tawait this.sleep();\r\n\t\t\t\t}\r\n\t\t\t\t//输入器显示\r\n\t\t\t\tthis.digitalShow = false;\r\n\t\t\t\t// 启动计时器开始计时\r\n\t\t\t\tthis.startTime();\r\n\t\t\t},\r\n\t\t\tuserClick(param) {\r\n\t\t\t\t//用户点击输入数字\r\n\t\t\t\t// this.sendMsgHandle(3902, param);\r\n\t\t\t\tthis.numberArr.push(param);\r\n\t\t\t\t// this.numberShow += param;\r\n\t\t\t\tthis.numberShow = this.numberArr.join(\"\");\r\n\t\t\t},\r\n\t\t\tuserDel() {\r\n\t\t\t\t// 删除数字\r\n\t\t\t\t// this.sendMsgHandle(3903, null);\r\n\t\t\t\tthis.numberArr.pop();\r\n\t\t\t\tthis.numberShow = this.numberArr.join(\"\");\r\n\t\t\t},\r\n\t\t\tuserSubmit() {\r\n\t\t\t\t//提交结果\r\n\t\t\t\t// this.sendMsgHandle(3904, null);\r\n\t\t\t\tif (this.numberShow.length == 0) {\r\n\t\t\t\t\t// this.$message.error(\"请输入数字提交\");\r\n\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '请输入数字提交'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//关闭计时器\r\n\t\t\t\tthis.endTime();\r\n\r\n\t\t\t\tif (this.desFlag) {\r\n\t\t\t\t\tif (this.numberShow.length == this.randomDigital.length) {\r\n\t\t\t\t\t\t//正背\r\n\t\t\t\t\t\tif (this.numberShow == this.randomDigital) {\r\n\t\t\t\t\t\t\tthis.result.AESC[this.cumulation].qNumberSequence =\r\n\t\t\t\t\t\t\t\tthis.randomDigital; //呈现字母序列\r\n\t\t\t\t\t\t\tthis.result.AESC[this.cumulation].userResponseSequence =\r\n\t\t\t\t\t\t\t\tthis.numberShow; //用户反应字母序列\r\n\t\t\t\t\t\t\tthis.result.AESC[this.cumulation].rightOrWrong = \"YES\"; //反应正确性\r\n\t\t\t\t\t\t\tthis.result.AESC[this.cumulation].responseTime = this.commonTime; //反应时\r\n\r\n\t\t\t\t\t\t\t// 判断获取等级分值\r\n\t\t\t\t\t\t\tif (this.cumulation % 2 != 0) {\r\n\t\t\t\t\t\t\t\tif (this.result.AESC[this.cumulation - 1].rightOrWrong == \"YES\") {\r\n\t\t\t\t\t\t\t\t\tthis.result.AESCScore = this.result.AESC[this.cumulation].diff;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.result.AESC[this.cumulation].qNumberSequence =\r\n\t\t\t\t\t\t\t\tthis.randomDigital; //呈现字母序列\r\n\t\t\t\t\t\t\tthis.result.AESC[this.cumulation].userResponseSequence =\r\n\t\t\t\t\t\t\t\tthis.numberShow; //用户反应字母序列\r\n\t\t\t\t\t\t\tthis.result.AESC[this.cumulation].rightOrWrong = \"NO\"; //反应正确性\r\n\t\t\t\t\t\t\tthis.result.AESC[this.cumulation].responseTime = this.commonTime; //反应时\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.result.AESC[this.cumulation].qNumberSequence =\r\n\t\t\t\t\t\t\tthis.randomDigital; //呈现字母序列\r\n\t\t\t\t\t\tthis.result.AESC[this.cumulation].userResponseSequence =\r\n\t\t\t\t\t\t\tthis.numberShow; //用户反应字母序列\r\n\t\t\t\t\t\tthis.result.AESC[this.cumulation].rightOrWrong = \"NO\"; //反应正确性\r\n\t\t\t\t\t\tthis.result.AESC[this.cumulation].responseTime = this.commonTime; //反应时\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.cumulation >= 19) {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '正背测试完成！接下来进入倒背测试！'\r\n\t\t\t\t\t\t})\r\n\r\n\r\n\t\t\t\t\t\t// 进倒背背练习\r\n\t\t\t\t\t\tthis.cumulation = 0;\r\n\t\t\t\t\t\t// 是否正背\r\n\t\t\t\t\t\tthis.desFlag = false;\r\n\r\n\t\t\t\t\t\t//关闭输入器显示数字展示\r\n\t\t\t\t\t\tthis.digitalShow = true;\r\n\t\t\t\t\t\t//清空显示器数字\r\n\t\t\t\t\t\tthis.numberArr = [];\r\n\t\t\t\t\t\tthis.numberShow = \"\";\r\n\r\n\t\t\t\t\t\t//倒背第一个数据开始\r\n\t\t\t\t\t\t// this.generateRandom(this.result.DESC[this.cumulation].diff);\r\n\t\t\t\t\t\t//修改数据，调用倒计时\r\n\t\t\t\t\t\t// this.timingDes = '休息10秒后继续开始倒背测试'; //倒计时提示语\r\n\t\t\t\t\t\tthis.countDownStr = \"测试马上开始！\";\r\n\t\t\t\t\t\tthis.timingNum = 10; //倒计时初始化时间\r\n\t\t\t\t\t\tthis.timingShow = true; //显示倒计时\r\n\t\t\t\t\t\tthis.startTiming();\r\n\r\n\t\t\t\t\t\t//清空显示器数字\r\n\t\t\t\t\t\t// this.numberShow = '';\r\n\t\t\t\t\t\t//关闭计时器\r\n\t\t\t\t\t\tthis.endTime();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 累加器自增\r\n\t\t\t\t\t\tthis.cumulation++;\r\n\t\t\t\t\t\t//关闭输入器显示数字展示\r\n\t\t\t\t\t\tthis.digitalShow = true;\r\n\t\t\t\t\t\t//清空显示器数字\r\n\t\t\t\t\t\tthis.numberArr = [];\r\n\t\t\t\t\t\tthis.numberShow = \"\";\r\n\t\t\t\t\t\tthis.generateRandom(this.result.AESC[this.cumulation].diff);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.numberShow.length == this.randomDigital.length) {\r\n\t\t\t\t\t\t//倒背\r\n\t\t\t\t\t\tif (this.numberShow == this.randomArr.reverse().join(\"\")) {\r\n\t\t\t\t\t\t\tthis.result.DESC[this.cumulation].qNumberSequence =\r\n\t\t\t\t\t\t\t\tthis.randomDigital; //呈现字母序列\r\n\t\t\t\t\t\t\tthis.result.DESC[this.cumulation].userResponseSequence =\r\n\t\t\t\t\t\t\t\tthis.numberShow; //用户反应字母序列\r\n\t\t\t\t\t\t\tthis.result.DESC[this.cumulation].rightOrWrong = \"YES\"; //反应正确性\r\n\t\t\t\t\t\t\tthis.result.DESC[this.cumulation].responseTime = this.commonTime; //反应时\r\n\r\n\t\t\t\t\t\t\t// 判断获取等级分值\r\n\t\t\t\t\t\t\tif (this.cumulation % 2 != 0) {\r\n\t\t\t\t\t\t\t\tif (this.result.DESC[this.cumulation - 1].rightOrWrong == \"YES\") {\r\n\t\t\t\t\t\t\t\t\tthis.result.DESCScore = this.result.DESC[this.cumulation].diff;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.result.DESC[this.cumulation].qNumberSequence =\r\n\t\t\t\t\t\t\t\tthis.randomDigital; //呈现字母序列\r\n\t\t\t\t\t\t\tthis.result.DESC[this.cumulation].userResponseSequence =\r\n\t\t\t\t\t\t\t\tthis.numberShow; //用户反应字母序列\r\n\t\t\t\t\t\t\tthis.result.DESC[this.cumulation].rightOrWrong = \"NO\"; //反应正确性\r\n\t\t\t\t\t\t\tthis.result.DESC[this.cumulation].responseTime = this.commonTime; //反应时\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.result.DESC[this.cumulation].qNumberSequence =\r\n\t\t\t\t\t\t\tthis.randomDigital; //呈现字母序列\r\n\t\t\t\t\t\tthis.result.DESC[this.cumulation].userResponseSequence =\r\n\t\t\t\t\t\t\tthis.numberShow; //用户反应字母序列\r\n\t\t\t\t\t\tthis.result.DESC[this.cumulation].rightOrWrong = \"NO\"; //反应正确性\r\n\t\t\t\t\t\tthis.result.DESC[this.cumulation].responseTime = this.commonTime; //反应时\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.cumulation >= 17) {\r\n\r\n\t\t\t\t\t\tlet routerInfo = {\r\n\t\t\t\t\t\t\t\"正序成绩\": this.result.AESCScore + \"\",\r\n\t\t\t\t\t\t\t\"倒序成绩\": this.result.DESCScore + \"\",\r\n\t\t\t\t\t\t};\r\n\r\n\r\n\t\t\t\t\t\tif (!this.showCover) {\r\n\t\t\t\t\t\t\tlet params = {\r\n\t\t\t\t\t\t\t\tuserId: this.userId,\r\n\t\t\t\t\t\t\t\tresult: this.result,\r\n\t\t\t\t\t\t\t\ttestPlanId: this.testPlanId\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet par = this.$CryptoJS.AesEncrypt(JSON.stringify(params))\r\n\t\t\t\t\t\t\tthis.$request\r\n\t\t\t\t\t\t\t\t.post({\r\n\t\t\t\t\t\t\t\t\turl: cognizeADDITION,\r\n\t\t\t\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\t\t\t\tdata: par\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.then(\r\n\t\t\t\t\t\t\t\t\tresponse => {\r\n\t\t\t\t\t\t\t\t\t\tif (response && response.code == '200') {\r\n\t\t\t\t\t\t\t\t\t\t\t// this.sendMsgHandle(3907, response.data);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle: '测试结束！'\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t//清空显示器数字\r\n\t\t\t\t\t\t\t\t\t\t\tthis.numberArr = [];\r\n\t\t\t\t\t\t\t\t\t\t\tthis.numberShow = \"\";\r\n\t\t\t\t\t\t\t\t\t\t\t//关闭计时器\r\n\t\t\t\t\t\t\t\t\t\t\tthis.endTime();\r\n\t\t\t\t\t\t\t\t\t\t\t//跳转新测试结果页面\r\n\t\t\t\t\t\t\t\t\t\t\tthis.goTestResult(response.data);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\t\t\t\ttitle: response?.msg\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\terr => {\r\n\t\t\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\t\t\ttitle: err.msg\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\t// this.$http.post(\r\n\t\t\t\t\t\t\t// \t`/cognize/DST`, {\r\n\t\t\t\t\t\t\t// \t\tuserId: this.userId,\r\n\t\t\t\t\t\t\t// \t\tresult: this.result,\r\n\t\t\t\t\t\t\t// \t\ttestPlanId: this.testPlanId,\r\n\t\t\t\t\t\t\t// \t},\r\n\t\t\t\t\t\t\t// \t(response) => {\r\n\t\t\t\t\t\t\t// \t\tif (response && response.code == '200') {\r\n\t\t\t\t\t\t\t// \t\t\t// this.sendMsgHandle(3907, response.data);\r\n\r\n\t\t\t\t\t\t\t// \t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t// \t\t\t\ttitle: '测试结束！'\r\n\t\t\t\t\t\t\t// \t\t\t})\r\n\r\n\t\t\t\t\t\t\t// \t\t\t//清空显示器数字\r\n\t\t\t\t\t\t\t// \t\t\tthis.numberArr = [];\r\n\t\t\t\t\t\t\t// \t\t\tthis.numberShow = \"\";\r\n\t\t\t\t\t\t\t// \t\t\t//关闭计时器\r\n\t\t\t\t\t\t\t// \t\t\tthis.endTime();\r\n\t\t\t\t\t\t\t// \t\t\t//跳转新测试结果页面\r\n\t\t\t\t\t\t\t// \t\t\tthis.goTestResult(response.data);\r\n\t\t\t\t\t\t\t// \t\t}\r\n\t\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t\t// );\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t//清空显示器数字\r\n\t\t\t\t\t\t\tthis.numberArr = [];\r\n\t\t\t\t\t\t\tthis.numberShow = \"\";\r\n\t\t\t\t\t\t\t//关闭计时器\r\n\t\t\t\t\t\t\tthis.endTime();\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 累加器自增\r\n\t\t\t\t\t\tthis.cumulation++;\r\n\t\t\t\t\t\t//关闭输入器显示数字展示\r\n\t\t\t\t\t\tthis.digitalShow = true;\r\n\t\t\t\t\t\t//清空显示器数字\r\n\t\t\t\t\t\tthis.numberArr = [];\r\n\t\t\t\t\t\tthis.numberShow = \"\";\r\n\t\t\t\t\t\tthis.generateRandom(this.result.DESC[this.cumulation].diff);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tasync goTestResult(id) {\r\n\t\t\t\tawait getApp().getVersionId(id);\r\n\t\t\t\tlet isFalse = getApp().globalData.isTrue;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (isFalse) {\r\n\t\t\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\t\t\turl: \"/cognitiveTasksTestResult/testResultNew?id=\" + id\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\t\t\turl: \"/cognitiveTasksTestResult/testResult?id=\" + id +\r\n\t\t\t\t\t\t\t\t\"&messageShare=1&flag=\" + getApp()\r\n\t\t\t\t\t\t\t\t.globalData.flag\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tconsole.log(\"旧====>\", isFalse)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, 1000)\r\n\r\n\r\n\r\n\t\t\t},\r\n\t\t\t// goTestResult(id) {\r\n\t\t\t// \tthis.$http.get(`getRecordById?id=${id}`, {}, (res) => {\r\n\t\t\t// \t\tif (res.code == 2001) {\r\n\r\n\t\t\t// \t\t\tuni.showToast({\r\n\t\t\t// \t\t\t\ttitle: res.msg\r\n\t\t\t// \t\t\t})\r\n\t\t\t// \t\t\treturn;\r\n\t\t\t// \t\t}\r\n\t\t\t// \t\tif (res && res.code == 200) {\r\n\t\t\t// \t\t\tif (JSON.parse(res.data?.userRecordEntity?.testResult).versionNo == \"2.0.1\") {\r\n\t\t\t// \t\t\t\t//跳转新测试结果模版数据暂存本地\r\n\t\t\t// \t\t\t\tthis.$store.dispatch('setTestResult', res?.data);\r\n\t\t\t// \t\t\t\tthis.$router.push({\r\n\t\t\t// \t\t\t\t\tname: \"testResultNew\",\r\n\t\t\t// \t\t\t\t\tquery: {\r\n\t\t\t// \t\t\t\t\t\tid: res.data?.userRecordEntity?.id,\r\n\t\t\t// \t\t\t\t\t\ttitle: res.data?.userRecordEntity?.name,\r\n\t\t\t// \t\t\t\t\t\ttestPlanId: this.testPlanId || '',\r\n\t\t\t// \t\t\t\t\t\tcome: 1, //1-来自认知任务列表，2-测试记录列表\r\n\t\t\t// \t\t\t\t\t},\r\n\t\t\t// \t\t\t\t});\r\n\t\t\t// \t\t\t} else {\r\n\t\t\t// \t\t\t\t//跳转旧测试结果模版\r\n\r\n\t\t\t// \t\t\t\tlet testResult = JSON.parse(res.data?.userRecordEntity?.testResult)[0].version;\r\n\r\n\t\t\t// \t\t\t\tif (testResult == 2) {\r\n\t\t\t// \t\t\t\t\tthis.$router.push(\"/testRecordsSCl?id=\" + id);\r\n\t\t\t// \t\t\t\t} else {\r\n\t\t\t// \t\t\t\t\tthis.$router.push(\"/testResult?flag=\" + res.data?.userRecordEntity?.flag + \"&id=\" +\r\n\t\t\t// \t\t\t\t\t\tid);\r\n\t\t\t// \t\t\t\t}\r\n\t\t\t// \t\t\t}\r\n\r\n\t\t\t// \t\t} else {\r\n\t\t\t// \t\t\tuni.showToast({\r\n\t\t\t// \t\t\t\ttitle: '获取数据失败！服务器异常'\r\n\t\t\t// \t\t\t})\r\n\r\n\t\t\t// \t\t}\r\n\t\t\t// \t});\r\n\t\t\t// },\r\n\t\t\tendTest() {\r\n\t\t\t\t//当测试未结束时\r\n\t\t\t\t//当现在正进行正序时需要先执行倒计时开始倒序\r\n\t\t\t\tif (this.role == \"doc\") {\r\n\t\t\t\t\t// this.sendMsgHandle(3906, null);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.desFlag) {\r\n\t\t\t\t\tthis.cumulation = 0;\r\n\t\t\t\t\t// 是否正背\r\n\t\t\t\t\tthis.desFlag = false;\r\n\t\t\t\t\t//关闭输入器显示数字展示\r\n\t\t\t\t\tthis.digitalShow = true;\r\n\t\t\t\t\t//清空显示器数字\r\n\t\t\t\t\tthis.numberArr = [];\r\n\t\t\t\t\tthis.numberShow = \"\";\r\n\r\n\t\t\t\t\t//倒背第一个数据开始\r\n\t\t\t\t\t// this.generateRandom(this.result.DESC[this.cumulation].diff);\r\n\t\t\t\t\t//修改数据，调用倒计时\r\n\t\t\t\t\t// this.timingDes = '休息10秒后继续开始倒背测试'; //倒计时提示语\r\n\t\t\t\t\tthis.countDownStr = \"倒序测试马上开始！\";\r\n\t\t\t\t\tthis.forceEndButtonName = \"结束倒序测试\";\r\n\t\t\t\t\tthis.timingNum = 10; //倒计时初始化时间\r\n\t\t\t\t\tthis.timingShow = true; //显示倒计时\r\n\t\t\t\t\tthis.startTiming();\r\n\r\n\t\t\t\t\t//清空显示器数字\r\n\t\t\t\t\t// this.numberShow = '';\r\n\t\t\t\t\t//关闭计时器\r\n\t\t\t\t\tthis.endTime();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//保存数数据到数据库\r\n\t\t\t\t\tlet result = {\r\n\t\t\t\t\t\t\"正序成绩\": this.result.AESCScore + \"\",\r\n\t\t\t\t\t\t\"倒序成绩\": this.result.DESCScore + \"\",\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// sessionStorage.setItem(\"resultInfo\", JSON.stringify(result));\r\n\r\n\t\t\t\t\tif (this.role != \"doc\") {\r\n\t\t\t\t\t\t// this.$router.push(`/cognitiveTestResult?from=1&testPlanId=${this.testPlanId}`);\r\n\t\t\t\t\t\tif (this.testPlanId) {\r\n\t\t\t\t\t\t\t//来自测试计划列表\r\n\t\t\t\t\t\t\tthis.$router.push({\r\n\t\t\t\t\t\t\t\tname: \"testPlanClassify\",\r\n\t\t\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\t\t\ttestPlanId: this.testPlanId,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// this.$router.push(\"/index/cognitionTask\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$http.post(`/cognize/DST`, {\r\n\t\t\t\t\t\t\tuserId: this.userId,\r\n\t\t\t\t\t\t\tresult: this.result,\r\n\t\t\t\t\t\t\ttestPlanId: this.testPlanId,\r\n\t\t\t\t\t\t}, (response) => {\r\n\t\t\t\t\t\t\tif (response && response.code == '200') {\r\n\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\ttitle: '测试结束！'\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t// this.$router.push(\"/welcome/CognitiveAbility\");\r\n\t\t\t\t\t\t\t\t// this.sendMsgHandle(3907, response.data);\r\n\t\t\t\t\t\t\t\t//清空显示器数字\r\n\t\t\t\t\t\t\t\tthis.numberArr = [];\r\n\t\t\t\t\t\t\t\tthis.numberShow = \"\";\r\n\t\t\t\t\t\t\t\t//关闭计时器\r\n\t\t\t\t\t\t\t\tthis.endTime();\r\n\t\t\t\t\t\t\t\t//关闭socket\r\n\t\t\t\t\t\t\t\tthis.closeWebsocket()\r\n\t\t\t\t\t\t\t\t//跳转新测试结果页面\r\n\t\t\t\t\t\t\t\tthis.goTestResult(response.data);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\t//关闭websocket\r\n\t\t\tcloseWebsocket(e) {\r\n\t\t\t\tif (this.webSocket) {\r\n\t\t\t\t\tthis.webSocket.close();\r\n\t\t\t\t\t// let _this=this\r\n\t\t\t\t\tthis.webSocket.onclose = function(evt) {\r\n\t\t\t\t\t\tconsole.log(\"websocket已关闭\");\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbeforeDestroy() {\r\n\t\t\t//卸载事件\r\n\t\t\twindow.removeEventListener('beforeunload', e => this.closeWebsocket(e))\r\n\t\t},\r\n\t\tdestroyed() {\r\n\t\t\tclearInterval(this.timeFlag);\r\n\t\t\tclearInterval(this.timingFlag);\r\n\t\t\t//关闭socket\r\n\t\t\tthis.closeWebsocket()\r\n\t\t},\r\n\r\n\t}\r\n</script>\r\n\r\n<style scoped>\r\n\t@import url('./css/DigitalMemoryTest.css');\r\n</style>\n","import mod from \"-!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./DigitalMemoryTest.vue?vue&type=style&index=0&id=7d3d364d&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./DigitalMemoryTest.vue?vue&type=style&index=0&id=7d3d364d&scoped=true&lang=css&\""],"sourceRoot":""}